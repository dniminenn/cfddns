name: Build and Package

on:
    push:
        tags:
            - "v*.*" # Trigger on version tags like v1.0, v2.1, etc.
    workflow_dispatch: # Allow manual triggering from GitHub Actions UI

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                goos: [linux, darwin, windows, freebsd]
                goarch: [amd64]

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23.1"
                  check-latest: true

            - name: Install dependencies
              run: go mod download

            - name: Build
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
              run: |
                  APP_NAME="cfddns"
                  VERSION=${GITHUB_REF#refs/tags/}
                  OUTPUT_NAME="${APP_NAME}_${VERSION}_${GOOS}_${GOARCH}"

                  if [ "$GOOS" == "windows" ]; then
                    BINARY_NAME="${APP_NAME}.exe"
                  else
                    BINARY_NAME="$APP_NAME"
                  fi

                  mkdir -p build/$OUTPUT_NAME
                  env GOOS=$GOOS GOARCH=$GOARCH go build -o build/$OUTPUT_NAME/$BINARY_NAME main.go

                  # Package the binary
                  cd build/$OUTPUT_NAME
                  if [ "$GOOS" == "windows" ]; then
                    zip ../${OUTPUT_NAME}.zip $BINARY_NAME
                  else
                    tar -czf ../${OUTPUT_NAME}.tar.gz $BINARY_NAME
                  fi
                  cd ../..
                  rm -rf build/$OUTPUT_NAME

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ matrix.goos }}-${{ matrix.goarch }}
                  path: |
                      build/*.tar.gz
                      build/*.zip
